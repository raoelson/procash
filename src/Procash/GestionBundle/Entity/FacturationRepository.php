<?php

namespace Procash\GestionBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * FacturationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FacturationRepository extends EntityRepository {

    public function getListeFacturationFiltrerPar($collecteur = null, $client = null, $reglement = null, $date = null) {

        $condition = $join = '';
        if (!is_null($collecteur)) {
            $join = " LEFT JOIN utilisateur u ON u.id = f.login_saisi_id ";
            $condition .= ' and u.id = ' . $collecteur;
        }
        if (!is_null($client)) {
            $condition .= ' and c.id = ' . $client;
        }
        if (!is_null($reglement)) {
            $condition .= ' and tp.id = ' . $reglement;
        }
        if (!is_null($date)) {
            $dateFacturation = $date->format('Y-m-d') . ' 00:00:00';
            $condition .= " and f.date = '" . $dateFacturation . "'";
        }

        $sql = "SELECT c.id as idClient, c.nom as nomClient, SUM(f.montant_facture) as montantFacture,tp.libelle as typePaiement, f.date as date, f.numero_facture as numeroFacture,f.id as idFacture "
                . " FROM `facturation` f "
                . " LEFT JOIN client c ON c.id = f.client_id "
                . " LEFT JOIN type_paiement tp ON tp.id = f.type_paiement_id " . $join . ""
                . " WHERE c.date_suppression is null " . $condition . " "
                . " GROUP BY c.nom "

        ;
//        var_dump($sql);die;
        $qry = $this->_em->getConnection()->prepare($sql);
        $qry->execute();

        return $qry->fetchAll();
    }

    public function getListeHistoriqueMontant($idParent) {
        $qb = $this->createQueryBuilder('f');
        $qb->where('f.idParent =:idCVParent')
                //  ->andWhere('c.dateSuppression is not NULL')
                ->setParameter('idCVParent', $idParent);

        return $qb->getQuery()->getResult();
    }

    public function getListeClients() {
        $sql = "SELECT c.id as idClient, c.nom as nomClient, SUM(f.montant_facture) as montantFacture,tp.libelle as typePaiement, f.date as date, f.numero_facture as numeroFacture,f.id as idFacture "
                . " FROM `facturation` f "
                . " LEFT JOIN client c ON c.id = f.client_id "
                . " LEFT JOIN type_paiement tp ON tp.id = f.type_paiement_id "
                . " WHERE c.date_suppression is null "
                . " GROUP BY f.numero_facture "

        ;
//      print_r($sql);die;
        $qry = $this->_em->getConnection()->prepare($sql);
        $qry->execute();

        return $qry->fetchAll();
    }

}
